//
// This file is autogenerated
//

//
//  Identify.swift
//  Keybase
//  Copyright Â© 2016 Keybase. All rights reserved.
//

import Foundation
import SwiftyJSON



//
// Identify
//


public class IdentifyProofBreak {

	public let remoteProof: RemoteProof?
	public let lcr: LinkCheckResult?

  public init(remoteProof: RemoteProof, lcr: LinkCheckResult) {
    self.remoteProof = remoteProof
		self.lcr = lcr
  }

  public class func fromJSON(_ json: JSON) -> IdentifyProofBreak {
    return IdentifyProofBreak(remoteProof: RemoteProof.fromJSON(json["remoteProof"]), lcr: LinkCheckResult.fromJSON(json["lcr"]))
  }

  public class func fromJSONArray(_ json: [JSON]) -> [IdentifyProofBreak] {
    return json.map { fromJSON($0) }
  }

}



public class IdentifyTrackBreaks {

	public let keys: [IdentifyKey]?
	public let proofs: [IdentifyProofBreak]?

  public init(keys: [IdentifyKey], proofs: [IdentifyProofBreak]) {
    self.keys = keys
		self.proofs = proofs
  }

  public class func fromJSON(_ json: JSON) -> IdentifyTrackBreaks {
    return IdentifyTrackBreaks(keys: IdentifyKey.fromJSONArray(json["keys"].arrayValue), proofs: IdentifyProofBreak.fromJSONArray(json["proofs"].arrayValue))
  }

  public class func fromJSONArray(_ json: [JSON]) -> [IdentifyTrackBreaks] {
    return json.map { fromJSON($0) }
  }

}



public class Identify2Res {

	public let upk: UserPlusKeys?
	public let trackBreaks: IdentifyTrackBreaks??

  public init(upk: UserPlusKeys, trackBreaks: IdentifyTrackBreaks?) {
    self.upk = upk
		self.trackBreaks = trackBreaks
  }

  public class func fromJSON(_ json: JSON) -> Identify2Res {
    return Identify2Res(upk: UserPlusKeys.fromJSON(json["upk"]), trackBreaks: IdentifyTrackBreaks.fromJSON(json["trackBreaks"]))
  }

  public class func fromJSONArray(_ json: [JSON]) -> [Identify2Res] {
    return json.map { fromJSON($0) }
  }

}

