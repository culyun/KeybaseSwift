//
// This file is autogenerated
//

//
//  IdentifyUiRequest.swift
//  Keybase
//  Copyright Â© 2015 Keybase. All rights reserved.
//

import Foundation
import SwiftyJSON



//
// IdentifyUi
//

public class IdentifyUiRequest: Request {

  public func delegateIdentifyUI() throws -> Int {
    let args: [String: AnyObject] = [String: AnyObject]()
    let response = try self.sendRequest("keybase.1.identifyUi.delegateIdentifyUI", args: args)
    try checkNull(response)
    return JSON(response).intValue
  }

  public func start(username: String, reason: IdentifyReason) throws {
    let args: [String: AnyObject] = ["username": username, "reason": reason]
    try self.sendRequest("keybase.1.identifyUi.start", args: args)
  }

  public func displayKey(key: IdentifyKey) throws {
    let args: [String: AnyObject] = ["key": key]
    try self.sendRequest("keybase.1.identifyUi.displayKey", args: args)
  }

  public func reportLastTrack(track: TrackSummary?) throws {
    let args: [String: AnyObject] = ["track": wrapNull(track)]
    try self.sendRequest("keybase.1.identifyUi.reportLastTrack", args: args)
  }

  public func launchNetworkChecks(identity: Identity, user: User) throws {
    let args: [String: AnyObject] = ["identity": identity, "user": user]
    try self.sendRequest("keybase.1.identifyUi.launchNetworkChecks", args: args)
  }

  public func displayTrackStatement(stmt: String) throws {
    let args: [String: AnyObject] = ["stmt": stmt]
    try self.sendRequest("keybase.1.identifyUi.displayTrackStatement", args: args)
  }

  public func finishWebProofCheck(rp: RemoteProof, lcr: LinkCheckResult) throws {
    let args: [String: AnyObject] = ["rp": rp, "lcr": lcr]
    try self.sendRequest("keybase.1.identifyUi.finishWebProofCheck", args: args)
  }

  public func finishSocialProofCheck(rp: RemoteProof, lcr: LinkCheckResult) throws {
    let args: [String: AnyObject] = ["rp": rp, "lcr": lcr]
    try self.sendRequest("keybase.1.identifyUi.finishSocialProofCheck", args: args)
  }

  public func displayCryptocurrency(c: Cryptocurrency) throws {
    let args: [String: AnyObject] = ["c": c]
    try self.sendRequest("keybase.1.identifyUi.displayCryptocurrency", args: args)
  }

  public func reportTrackToken(trackToken: String) throws {
    let args: [String: AnyObject] = ["trackToken": trackToken]
    try self.sendRequest("keybase.1.identifyUi.reportTrackToken", args: args)
  }

  public func displayUserCard(card: UserCard) throws {
    let args: [String: AnyObject] = ["card": card]
    try self.sendRequest("keybase.1.identifyUi.displayUserCard", args: args)
  }

  public func confirm(outcome: IdentifyOutcome) throws -> ConfirmResult {
    let args: [String: AnyObject] = ["outcome": outcome]
    let response = try self.sendRequest("keybase.1.identifyUi.confirm", args: args)
    try checkNull(response)
    return ConfirmResult.fromJSON(JSON(response))
  }

  public func finish() throws {
    let args: [String: AnyObject] = [String: AnyObject]()
    try self.sendRequest("keybase.1.identifyUi.finish", args: args)
  }

}
