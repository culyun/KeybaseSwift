//
// This file is autogenerated
//

//
//  RekeyUIRequest.swift
//  Keybase
//  Copyright Â© 2016 Keybase. All rights reserved.
//

import Foundation
import SwiftyJSON



//
// RekeyUI
//

public class RekeyUIRequest: Request {

  public func delegateRekeyUI() throws -> Int {
    let args: [String: Any] = [String: Any]()
    let response = try self.sendRequest(method: "keybase.1.rekeyUI.delegateRekeyUI", args: args)
    try checkNull(response: response)
    return JSON(response).intValue
  }

/*!
 Refresh is called whenever Electron should refresh the UI, either
 because a change came in, or because there was a timeout poll.
 */
  public func refresh(problemSetDevices: ProblemSetDevices) throws {
    let args: [String: Any] = ["problemSetDevices": problemSetDevices]
    _ = try self.sendRequest(method: "keybase.1.rekeyUI.refresh", args: args)
  }

/*!
 RekeySendEvent sends updates as to what's going on in the rekey
 thread. This is mainly useful in testing.
 */
  public func rekeySendEvent(event: RekeyEvent) throws {
    let args: [String: Any] = ["event": event]
    _ = try self.sendRequest(method: "keybase.1.rekeyUI.rekeySendEvent", args: args)
  }

}
