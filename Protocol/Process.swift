//
// This file is autogenerated
//

//
//  Process.swift
//  Keybase
//  Copyright Â© 2016 Keybase. All rights reserved.
//

import Foundation
import SwiftyJSON



//
// Process
//

public enum FileType: Int {
	case unknown = 0
	case directory = 1
	case file = 2
}


public class FileDescriptor {

	public let name: String?
	public let type: FileType?

  public init(name: String, type: FileType) {
    self.name = name
		self.type = type
  }

  public class func fromJSON(_ json: JSON) -> FileDescriptor {
    return FileDescriptor(name: json["name"].stringValue, type: FileType(rawValue: json["type"].intValue)!)
  }

  public class func fromJSONArray(_ json: [JSON]) -> [FileDescriptor] {
    return json.map { fromJSON($0) }
  }

}



public class Process {

	public let pid: String?
	public let command: String?
	public let fileDescriptors: [FileDescriptor]?

  public init(pid: String, command: String, fileDescriptors: [FileDescriptor]) {
    self.pid = pid
		self.command = command
		self.fileDescriptors = fileDescriptors
  }

  public class func fromJSON(_ json: JSON) -> Process {
    return Process(pid: json["pid"].stringValue, command: json["command"].stringValue, fileDescriptors: FileDescriptor.fromJSONArray(json["fileDescriptors"].arrayValue))
  }

  public class func fromJSONArray(_ json: [JSON]) -> [Process] {
    return json.map { fromJSON($0) }
  }

}

